/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |				
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9                                   	
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;


geometry
{
    inlet.stl
    {
        type triSurfaceMesh;
        name inlet;
    }
    
     outlet.stl
    {
        type triSurfaceMesh;
        name outlet;
    }
    
    inletwall.stl
    {
        type triSurfaceMesh;
        name inletwall;
    }
    
    outletwall.stl
    {
        type triSurfaceMesh;
        name outletwall;
    }

    wall.stl
    {
        type triSurfaceMesh;
        name wall;
    }
    
   
    
    top.stl
    {
        type triSurfaceMesh;
        name top;
    }
    
    bottom.stl
    {
        type triSurfaceMesh;
        name bottom;
    }

//To get regions in the STL
/*
        regions
        {

            secondSolid			// Named region in the STL file
            {
                name mySecondPatch;	// User-defined patch name
            }

        }
*/

/*
    refinementBox
    {
        type searchableBox;
        min (-2 -2 -2);
        max (2 2 2);
    }
*/

};

// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    // Refinement parameters
    // ~~~~~~~~~~~~~~~~~~~~~

    maxLocalCells 100000;

    maxGlobalCells 200000;

    minRefinementCells 0;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 3;

    // Explicit feature edge refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    features
    (

        {
            file "inlet.eMesh";
            level 3;
          //level 4;
        }
        
        {
            file "outlet.eMesh";
            level 3;
          //level 4;
        }
        
        {
            file "inletwall.eMesh";
            level 3;
          //level 4;
        }
        
        {
            file "wall.eMesh";
            level 0;
          //level 4;
        }
        
        {
            file "outletwall.eMesh";
            level 3;
          //level 4;
        }
        
        {
            file "top.eMesh";
            level 0;
          //level 4;
        }
        
        {
            file "bottom.eMesh";
            level 0;
          //level 4;
        }


    );

    // Surface based refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~

    refinementSurfaces
    {

        inlet
        {
	    // global
            // Surface-wise min and max refinement level
            level (3 3);
        }
        
        outlet
        {
	    // global
            // Surface-wise min and max refinement level
            level (3 3);
        }
        
        inletwall
        {
	    // global
            // Surface-wise min and max refinement level
            level (3 3);
        }
        
        wall
        {
	    // global
            // Surface-wise min and max refinement level
            level (0 0);
        }
        
        outletwall
        {
	    // global
            // Surface-wise min and max refinement level
            level (3 3);
        }
        
        top
        {
	    // global
            // Surface-wise min and max refinement level
            level (0 0);
        }
        
        bottom
        {
	    // global
            // Surface-wise min and max refinement level
            level (0 0);
        }


    }

    // Feature angle:
    resolveFeatureAngle 30;		//recommended
    //resolveFeatureAngle 60;		//To avoid too much refinement with curvature		

    planarAngle 30;

    // Region-wise refinement
    // ~~~~~~~~~~~~~~~~~~~~~~

/*    refinementRegions
    {
        refinementBox
        {
            mode inside;        	// inside - outside
            levels ((1 1));     	// min max

            //mode distance;        	// 
            //levels ((0.1 1));     	//first number distance normal to the surface in both direction
        }
    }
*/
    // Mesh selection
    // ~~~~~~~~~~~~~~

    locationInMesh (7.5 3 0.66); 

    allowFreeStandingZoneFaces true;

}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 3;	//recommended
    //nSmoothPatch 10;	//improved

    tolerance 2.0;
    //tolerance 1.0;

    nSolveIter 30;	//recommended
    //nSolveIter 100;	//improved

    nRelaxIter 5;	//recommended
    //nRelaxIter 10;	//improved	10-20-50

    // Feature snapping

        nFeatureSnapIter 10;	//recommended
        //nFeatureSnapIter 100;	//improved 	20-50-100

        implicitFeatureSnap false;

        explicitFeatureSnap true;

        multiRegionFeatureSnap false;

}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;

    expansionRatio 1.2;

    finalLayerThickness 0.5;

    minThickness 0.1;

    layers
    {
        inletwall 
        {
            nSurfaceLayers 3;
        }  
        
        outletwall 
        {
            nSurfaceLayers 3;
        }     
    }

    nGrow 0;

    // Advanced settings
        featureAngle 30;		//default
        maxFaceThicknessRatio 0.5;
        nSmoothSurfaceNormals 1;
        nSmoothThickness 10;
        minMedialAxisAngle 90;
        minMedianAxisAngle 90;
        maxThicknessToMedialRatio 0.3;
        nSmoothNormals 3;
        slipFeatureAngle 30;
        nRelaxIter 5;
        nBufferCellsNoExtrude 0;
        nLayerIter 50;
        nRelaxedIter 20;
}

// Generic mesh quality settings. At any undoable phase these determine where to undo.
meshQualityControls
{
    #include "meshQualityDict"

    relaxed
    {
        // Maximum non-orthogonality allowed. Set to 180 to disable.
        maxNonOrtho 75;
    }

    //minFlatness 0.5;

    // Advanced

        // Number of error distribution iterations
        nSmoothScale 4;
        // amount to scale back displacement at error points
        errorReduction 0.75;
}

// Advanced

//// Debug flags
/*
debugFlags
(
    //mesh            // write intermediate meshes
    //intersections   // write current mesh intersections as .obj files
    //featureSeeds    // write information about explicit feature edge refinement
    //attraction      // write attraction as .obj files
    //layerInfo       // write information about layers
);


//
//// Write flags
/*
writeFlags
(
    scalarLevels    // write volScalarField with cellLevel for postprocessing
    layerSets       // write cellSets, faceSets of faces in layer
    layerFields     // write volScalarField for layer coverage
);
*/


mergeTolerance 1e-6;

// ************************************************************************* //
